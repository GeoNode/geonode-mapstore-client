# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ github_actions ]
  pull_request:
    branches: [ github_actions ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-front-end:
    env:
      working-directory: ./geonode_mapstore_client/client
    runs-on: ubuntu-latest
    steps:
      - name: "checking out"
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: "setting up npm"
        uses: actions/setup-node@v2
        with:
            node-version: '12.x'

      ############
      # CACHING
      ##########
      - name: "cache node modules"
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      ###############
      # NPM CHECKS
      #############
      - name: npm install
        run: npm install
        working-directory: ${{env.working-directory}}

      - name: ESlint
        run: npm run lint
        working-directory: ${{env.working-directory}}

      - name: Unit Tests
        run: npm test
        working-directory: ${{env.working-directory}}
 
  build:
    env:
      working-directory: ./geonode_mapstore_client/client
    runs-on: ubuntu-latest
    steps:
      - name: "checking out"
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git submodule update --init --recursive

      ###########
      # SET UP 
      #########
      - name: "setting up npm"
        uses: actions/setup-node@v2
        with:
            node-version: '12.x'

      ############
      # CACHING
      ##########
      - name: "cache node modules"
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      ###############
      # NPM CHECKS
      #############
      - name: npm-install
        run: npm install
        working-directory: ${{env.working-directory}}

      - name: run-compile
        run: npm run compile
        working-directory: ${{env.working-directory}}
        
      ###############
      # COMMIT
      #############
      - name: git-add
        #if: ${{ github.event_name=='push' }} # only commit on push to master (PR merge)
        run: git add --all
        
      - uses: tibdex/github-app-token@v1
        #if: ${{ github.event_name=='push' }} # only commit on push to master (PR merge)
        id: generate-token
        with:
          app_id: ${{ secrets.TOKEN_APP_ID }}
          private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}
        
      - name: create-pull-request
        #if: ${{ github.event_name=='push' }} # only commit on push to master (PR merge)
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ steps.generate-token.outputs.token }}
          title: "New client build"
          body: "Automated client build from GeoNode Client CI"

