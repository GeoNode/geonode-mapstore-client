(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[6593],{43378:(r,n,t)=>{"use strict";t.r(n),t.d(n,{optionsToVendorParams:()=>i});var e=t(47805);function o(r,n){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(r);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(r,n).enumerable}))),t.push.apply(t,e)}return t}function a(r){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(r,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(r,n,Object.getOwnPropertyDescriptor(t,n))}))}return r}function c(r,n,t){return n in r?Object.defineProperty(r,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[n]=t,r}var i=function(){var r,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=n.layerFilter,c=n.filterObj,i=[(0,e.isFilterValid)(o)&&!o.disabled&&(0,e.toCQLFilter)(o),(0,e.isFilterValid)(c)&&(0,e.toCQLFilter)(c),n&&n.params&&n.params.CQL_FILTER,t];return(r=(i=i.filter((function(r){return!!r}))).length>1?i.map((function(r){return"(".concat(r,")")})).join(" AND "):i.pop())?a(a({},n.params),{},{CQL_FILTER:r}):n.params}},89291:r=>{var n={PROPERTY:/^[_a-zA-Z]\w*/,COMPARISON:/^(=|<>|<=|<|>=|>|LIKE)/i,IS_NULL:/^IS NULL/i,COMMA:/^,/,LOGICAL:/^(AND|OR)/i,VALUE:/^('([^']|'')*'|-?\d+(\.\d*)?|\.\d+)/,LPAREN:/^\(/,RPAREN:/^\)/,SPATIAL:/^(BBOX|INTERSECTS|DWITHIN|WITHIN|CONTAINS)/i,NOT:/^NOT/i,BETWEEN:/^BETWEEN/i,GEOMETRY:function(r){var n=/^(POINT|LINESTRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)/.exec(r);if(n){var t=r.length,e=r.indexOf("(",n[0].length);if(e>-1)for(var o=1;e<t&&o>0;)switch(e++,r.charAt(e)){case"(":o++;break;case")":o--}return[r.substr(0,e+1)]}return null},END:/^$/},t={LPAREN:["GEOMETRY","SPATIAL","PROPERTY","VALUE","LPAREN"],RPAREN:["NOT","LOGICAL","END","RPAREN"],PROPERTY:["COMPARISON","BETWEEN","COMMA","IS_NULL"],BETWEEN:["VALUE"],IS_NULL:["END"],COMPARISON:["VALUE"],COMMA:["GEOMETRY","VALUE","PROPERTY"],VALUE:["LOGICAL","COMMA","RPAREN","END"],SPATIAL:["LPAREN"],LOGICAL:["NOT","VALUE","SPATIAL","PROPERTY","LPAREN"],NOT:["PROPERTY","LPAREN"],GEOMETRY:["COMMA","RPAREN"]},e={"=":"=","<>":"<>","<":"<","<=":"<=",">":">",">=":">=",LIKE:"like",ILIKE:"ilike",BETWEEN:"><","IS NULL":"isNull"},o={AND:"and",OR:"or",NOT:"not"},a={RPAREN:3,LOGICAL:2,COMPARISON:1},c=function(r,n){return n instanceof RegExp?n.exec(r):n(r)},i=function(r,t){var e,o,a=t.length;for(e=0;e<a;e++){o=t[e];var i=c(r,n[o]);if(i){var u=i[0];return{type:o,text:u,remainder:r.substr(u.length).replace(/^\s*/,"")}}}var l="ERROR: In parsing: ["+r+"], expected one of: ";for(e=0;e<a;e++)l+="\n    "+(o=t[e])+": "+n[o];throw new Error(l)};r.exports={read:function(r){return function(r){for(var n=[],t=[];r.length;){var c=r.shift();switch(c.type){case"PROPERTY":case"GEOMETRY":case"VALUE":t.push(c);break;case"COMPARISON":case"BETWEEN":case"IS_NULL":case"LOGICAL":for(var i=a[c.type];n.length>0&&a[n[n.length-1].type]<=i;)t.push(n.pop());n.push(c);break;case"SPATIAL":case"NOT":case"LPAREN":n.push(c);break;case"RPAREN":for(;n.length>0&&"LPAREN"!==n[n.length-1].type;)t.push(n.pop());n.pop(),n.length>0&&"SPATIAL"===n[n.length-1].type&&t.push(n.pop());break;case"COMMA":case"END":break;default:throw new Error("Unknown token type "+c.type)}}for(;n.length>0;)t.push(n.pop());var u=function r(){var n=t.pop();switch(n.type){case"LOGICAL":var a=r();return{filters:[r(),a],type:o[n.text.toUpperCase()]};case"NOT":return{filters:[r()],type:o.NOT};case"BETWEEN":t.pop();var c=r(),i=r();return{property:r(),lowerBoundary:i,upperBoundary:c,type:e.BETWEEN};case"COMPARISON":var u=r();return{property:r(),value:u,type:e[n.text.toUpperCase()]};case"IS_NULL":return{property:r(),type:e[n.text.toUpperCase()]};case"VALUE":var l=n.text.match(/^'(.*)'$/);return l?l[1].replace(/''/g,"'"):Number(n.text);case"SPATIAL":switch(n.text.toUpperCase()){case"BBOX":var s=r(),p=r(),f=r(),y=r();return{type:"BBOX",property:r(),value:[y,f,p,s]};case"INTERSECTS":var g=r();return{type:"INTERSECTS",property:r(),value:g};case"WITHIN":var E=r();return{type:"WITHIN",property:r(),value:E};case"CONTAINS":var N=r();return{type:"CONTAINS",property:r(),value:N};case"DWITHIN":var O=r();return{type:"DWITHIN",value:r(),property:r(),distance:Number(O)};default:return null}case"GEOMETRY":return function(){throw new Error("WKT parsing for CQL filter not supported yet")}(n.text);default:return n.text}}();if(t.length>0){for(var l="Remaining tokens after building AST: \n",s=t.length-1;s>=0;s--)l+=t[s].type+": "+t[s].text+"\n";throw new Error(l)}return u}(function(r){var n,e=[],o=r,a=["NOT","GEOMETRY","SPATIAL","PROPERTY","LPAREN"];do{if(o=(n=i(o,a)).remainder,a=t[n.type],"END"!==n.type&&!a)throw new Error("No follows list for "+n.type);e.push(n)}while("END"!==n.type);return e}(r))}}},2245:(r,n,t)=>{function e(r){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var o=t(99321),a=o.logical,c=o.spatial,i=o.comparison,u=o.literal,l=o.propertyName,s=o.valueReference,p=o.distance,f=o.lower,y=o.upper,g=t(34387),E=g.filter,N=g.fidFilter,O=t(65692).processOGCGeometry;r.exports=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r.filterNS,t=void 0===n?"ogc":n,o=r.gmlVersion,g=r.wfsVersion,h=void 0===g?"1.1.0":g,T=o||"3.1.1",A=function(r){return O(T,r)},m=function(r){return"object"===e(r)&&Date,u(t,r)},I=0===h.indexOf("2.")?s:l;return{filter:E.bind(null,t),fidFilter:N.bind(null,t),and:a.and.bind(null,t),or:a.or.bind(null,t),not:a.not.bind(null,t),property:function(r){return{equalTo:function(n){return i.equal(t,I(t,r),m(n))},greaterThen:function(n){return i.greater(t,I(t,r),m(n))},greaterThenOrEqualTo:function(n){return i.greaterOrEqual(t,I(t,r),m(n))},lessThen:function(n){return i.less(t,I(t,r),m(n))},lessThenOrEqualTo:function(n){return i.lessOrEqual(t,I(t,r),m(n))},notEqualTo:function(n){return i.notEqual(t,I(t,r),m(n))},between:function(n,e){return i.between(t,I(t,r),f(t,m(n)),y(t,m(e)))},like:function(n,e){return i.like(t,I(t,r),m(n),e)},ilike:function(n,e){return i.ilike(t,I(t,r),m(n),e)},isNull:function(){return i.isNull(t,I(t,r))},intersects:function(n){return c.intersects(t,I(t,r),A(n))},within:function(n){return c.within(t,I(t,r),A(n))},dwithin:function(n,e){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"m";return c.dwithin(t,I(t,r),A(n),p(t,e,o))},contains:function(n){return c.contains(t,I(t,r),A(n))}}}}}},34387:r=>{var n=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"ogc",n=arguments.length>1?arguments[1]:void 0;return"<".concat(r,":Filter>").concat(Array.isArray(n)?n.join(""):n,"</").concat(r,":Filter>")};r.exports={fidFilter:function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"ogc",t=arguments.length>1?arguments[1]:void 0;return n(r,"<".concat(r,':FeatureId fid="').concat(t,'"/>'))},filter:n}},89737:(r,n,t)=>{function e(r){return function(r){if(Array.isArray(r))return o(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,n){if(r){if("string"==typeof r)return o(r,n);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?o(r,n):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(r,n){(null==n||n>r.length)&&(n=r.length);for(var t=0,e=new Array(n);t<n;t++)e[t]=r[t];return e}var a=t(61545),c=a.includes,i=a.isNil,u=["and","or","not"],l={"=":"equalTo","<>":"notEqualTo","><":"between","<":"lessThen","<=":"lessThenOrEqualTo",">":"greaterThen",">=":"greaterThenOrEqualTo",like:"like",ilike:"ilike"};r.exports=function r(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function(t){var o=t.type,a=t.filters,s=void 0===a?[]:a,p=t.value,f=t.property,y=t.lowerBoundary,g=t.upperBoundary;return c(u,o)?n[o].apply(n,e(s.map(r(n)))):n.property(f)[l[o]](i(p)?y:p,g)}}},99321:r=>{var n={"=":function(r,n){return"<".concat(r,":PropertyIsEqualTo>").concat(n,"</").concat(r,":PropertyIsEqualTo>")},">":function(r,n){return"<".concat(r,":PropertyIsGreaterThan>").concat(n,"</").concat(r,":PropertyIsGreaterThan>")},"<":function(r,n){return"<".concat(r,":PropertyIsLessThan>").concat(n,"</").concat(r,":PropertyIsLessThan>")},">=":function(r,n){return"<".concat(r,":PropertyIsGreaterThanOrEqualTo>").concat(n,"</").concat(r,":PropertyIsGreaterThanOrEqualTo>")},"<=":function(r,n){return"<".concat(r,":PropertyIsLessThanOrEqualTo>").concat(n,"</").concat(r,":PropertyIsLessThanOrEqualTo>")},"<>":function(r,n){return"<".concat(r,":PropertyIsNotEqualTo>").concat(n,"</").concat(r,":PropertyIsNotEqualTo>")},"><":function(r,n){return"<".concat(r,":PropertyIsBetween>").concat(n,"</").concat(r,":PropertyIsBetween>")},like:function(r,n){return"<".concat(r,':PropertyIsLike matchCase="true" wildCard="*" singleChar="." escapeChar="!">').concat(n,"</").concat(r,":PropertyIsLike>")},ilike:function(r,n){return"<".concat(r,':PropertyIsLike matchCase="false" wildCard="*" singleChar="." escapeChar="!">').concat(n,"</").concat(r,":PropertyIsLike>")},isNull:function(r,n){return"<".concat(r,":PropertyIsNull>").concat(n,"</").concat(r,":PropertyIsNull>")}},t={AND:function(r,n){return"<".concat(r,":And>").concat(n,"</").concat(r,":And>")},OR:function(r,n){return"<".concat(r,":Or>").concat(n,"</").concat(r,":Or>")},NOR:function(r,n){return"<".concat(r,":Not><").concat(r,":Or>").concat(n,"</").concat(r,":Or></").concat(r,":Not>")},NOT:function(r,n){return"<".concat(r,":Not>").concat(n,"</").concat(r,":Not>")}},e={INTERSECTS:function(r,n){return"<".concat(r,":Intersects>").concat(n,"</").concat(r,":Intersects>")},BBOX:function(r,n){return"<".concat(r,":BBOX>").concat(n,"</").concat(r,":BBOX>")},CONTAINS:function(r,n){return"<".concat(r,":Contains>").concat(n,"</").concat(r,":Contains>")},DWITHIN:function(r,n){return"<".concat(r,":DWithin>").concat(n,"</").concat(r,":DWithin>")},WITHIN:function(r,n){return"<".concat(r,":Within>").concat(n,"</").concat(r,":Within>")}},o=function(r,n,t){return n(r,Array.isArray(t)?t.join(""):t)},a={and:function(r,n){for(var e=arguments.length,a=new Array(e>2?e-2:0),c=2;c<e;c++)a[c-2]=arguments[c];return a&&a.length>0?o(r,t.AND,[n].concat(a)):o(r,t.AND,n)},or:function(r,n){for(var e=arguments.length,a=new Array(e>2?e-2:0),c=2;c<e;c++)a[c-2]=arguments[c];return a&&a.length>0?o(r,t.OR,[n].concat(a)):o(r,t.OR,n)},not:function(r,n){return o(r,t.NOT,n)},nor:function(r,n){for(var e=arguments.length,a=new Array(e>2?e-2:0),c=2;c<e;c++)a[c-2]=arguments[c];return a&&a.length>0?o(r,t.NOR,[n].concat(a)):o(r,t.NOR,n)}},c={intersects:function(r){for(var n=arguments.length,t=new Array(n>1?n-1:0),a=1;a<n;a++)t[a-1]=arguments[a];return o(r,e.INTERSECTS,t)},within:function(r){for(var n=arguments.length,t=new Array(n>1?n-1:0),a=1;a<n;a++)t[a-1]=arguments[a];return o(r,e.WITHIN,t)},bbox:function(r){for(var n=arguments.length,t=new Array(n>1?n-1:0),a=1;a<n;a++)t[a-1]=arguments[a];return o(r,e.BBOX,t)},dwithin:function(r){for(var n=arguments.length,t=new Array(n>1?n-1:0),a=1;a<n;a++)t[a-1]=arguments[a];return o(r,e.DWITHIN,t)},contains:function(r){for(var n=arguments.length,t=new Array(n>1?n-1:0),a=1;a<n;a++)t[a-1]=arguments[a];return o(r,e.CONTAINS,t)}},i={equal:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n["="],e)},greater:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n[">"],e)},less:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n["<"],e)},greaterOrEqual:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n[">="],e)},lessOrEqual:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n["<="],e)},notEqual:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n["<>"],e)},between:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n["><"],e)},like:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n.like,e)},ilike:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n.ilike,e)},isNull:function(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),a=1;a<t;a++)e[a-1]=arguments[a];return o(r,n.isNull,e)}};r.exports={ogcComparisonOperators:n,ogcLogicalOperators:t,ogcSpatialOperators:e,propertyName:function(r,n){return"<".concat(r,":PropertyName>").concat(n,"</").concat(r,":PropertyName>")},valueReference:function(r,n){return"<".concat(r,":ValueReference>").concat(n,"</").concat(r,":ValueReference>")},distance:function(r,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"m";return"<".concat(r,':Distance units="').concat(t,'">').concat(n,"</").concat(r,":Distance>")},literal:function(r,n){return"<".concat(r,":Literal>").concat(n,"</").concat(r,":Literal>")},logical:a,spatial:c,comparison:i,lower:function(r,n){return"<".concat(r,":LowerBoundary>").concat(n,"</").concat(r,":LowerBoundary>")},upper:function(r,n){return"<".concat(r,":UpperBoundary>").concat(n,"</").concat(r,":UpperBoundary>")}}},65692:(r,n,t)=>{var e=t(61545).isArray,o=function(r){return 0===r.indexOf("2.")},a=function(r){if(r.length>=3){var n=r[0],t=r[r.length-1];if(n[0]!==t[0]||n[1]!==t[1])return r.concat([r[0]])}return r},c=function(r,n,t){var e='<gml:Point srsDimension="2"';return e+=n?' srsName="'+n+'">':">",(e+=o(t)?"<gml:coord><X>"+r[0]+"</X><Y>"+r[1]+"</Y></gml:coord>":"<gml:pos>"+r.join(" ")+"</gml:pos>")+"</gml:Point>"},i=function(r,n,t){var c=o(t),i="<gml:Polygon";return i+=n?' srsName="'+n+'">':">",(r.length&&e(r[0])&&r[0].length&&e(r[0][0])?r:[r]).forEach((function(r,n){var t=a(r).map((function(r){return r[0]+(c?",":" ")+r[1]})),e=c?"outerBoundaryIs":"exterior",o=c?"innerBoundaryIs":"exterior";i+=(n<1?"<gml:"+e+">":"<gml:"+o+">")+"<gml:LinearRing>"+(c?"<gml:coordinates>":"<gml:posList>")+t.join(" ")+(c?"</gml:coordinates>":"</gml:posList>")+"</gml:LinearRing>"+(n<1?"</gml:"+e+">":"</gml:"+o+">")})),i+="</gml:Polygon>"},u=function(r,n,t){var e=o(t),a="<gml:LineString";a+=n?' srsName="'+n+'">':">";var c=r.map((function(r){return r[0]+(e?",":" ")+r[1]}));return(a+=(e?"<gml:coordinates>":"<gml:posList>")+c.join(" ")+(e?"</gml:coordinates>":"</gml:posList>"))+"</gml:LineString>"};r.exports={closePolygon:a,pointElement:c,polygonElement:i,lineStringElement:u,processOGCGeometry:function(r,n){var t="",e=n.projection||"EPSG:4326";switch(n.type){case"Point":t+=c(n.coordinates,e,r);break;case"MultiPoint":t+='<gml:MultiPoint srsName="'+(n.projection||"EPSG:4326")+'">',n.coordinates.forEach((function(n){n&&(t+="<gml:pointMember>",t+=c(n,e,r),t+="</gml:pointMember>")})),t+="</gml:MultiPoint>";break;case"LineString":t+=u(n.coordinates,e,r);break;case"MultiLineString":var o="3.2"===r?"MultiCurve":"MultiLineString",a="3.2"===r?"curveMember":"lineStringMember";t+="<gml:".concat(o,' srsName="').concat(e,'">'),n.coordinates.forEach((function(n){n&&(t+="<gml:"+a+">",t+=u(n,e,r),t+="</gml:"+a+">")})),t+="</gml:"+o+">";break;case"Polygon":t+=i(n.coordinates,e,r);break;case"MultiPolygon":var l="3.2"===r?"MultiSurface":"MultiPolygon",s="3.2"===r?"surfaceMembers":"polygonMember";t+="<gml:".concat(l,' srsName="').concat(e,'">'),n.coordinates.forEach((function(n){n&&(t+="<gml:"+s+">",t+=i(n,e,r),t+="</gml:"+s+">")})),t+="</gml:"+l+">"}return t}}}}]);