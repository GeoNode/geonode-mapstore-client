(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[32139],{492078:(e,t,s)=>{var n=s(514528),i=s(983120),r=s(423007),o=s(956449);e.exports=function(){var e=arguments.length;if(!e)return[];for(var t=Array(e-1),s=arguments[0],a=e;a--;)t[a-1]=arguments[a];return n(o(s)?r(s):[s],i(t,1))}},36068:(e,t,s)=>{"use strict";s.d(t,{A:()=>o});var n=s(806292),i=s(873445);class r extends n.Ay{constructor(e){super(),e=e||{},this.delta_=e.delta?e.delta:1,this.duration_=void 0!==e.duration?e.duration:250}handleEvent(e){let t=!1;if(e.type==i.A.DBLCLICK){const s=e.originalEvent,i=e.map,r=e.coordinate,o=s.shiftKey?-this.delta_:this.delta_,a=i.getView();(0,n.D2)(a,o,r,this.duration_),s.preventDefault(),t=!0}return!t}}const o=r},85890:(e,t,s)=>{"use strict";s.d(t,{A:()=>v});var n=s(332135),i=s(506837),r=s(821409),o=s(495902),a=s(88280),h=s(374238),l=s(570915),u=s(206933),c=s(934142),d=s(385733),_=s(104087),g=s(209438);function f(e){return e.feature?e.feature:e.element?e.element:null}const p=[];class m extends r.A{constructor(e){const t=e=e||{};t.handleDownEvent||(t.handleDownEvent=h.rT),t.stopDown||(t.stopDown=h.W8),super(t),this.source_=e.source?e.source:null,this.vertex_=void 0===e.vertex||e.vertex,this.edge_=void 0===e.edge||e.edge,this.features_=e.features?e.features:null,this.featuresListenerKeys_=[],this.featureChangeListenerKeys_={},this.indexedFeaturesExtents_={},this.pendingFeatures_={},this.pixelTolerance_=void 0!==e.pixelTolerance?e.pixelTolerance:10,this.rBush_=new o.A,this.GEOMETRY_SEGMENTERS_={Point:this.segmentPointGeometry_.bind(this),LineString:this.segmentLineStringGeometry_.bind(this),LinearRing:this.segmentLineStringGeometry_.bind(this),Polygon:this.segmentPolygonGeometry_.bind(this),MultiPoint:this.segmentMultiPointGeometry_.bind(this),MultiLineString:this.segmentMultiLineStringGeometry_.bind(this),MultiPolygon:this.segmentMultiPolygonGeometry_.bind(this),GeometryCollection:this.segmentGeometryCollectionGeometry_.bind(this),Circle:this.segmentCircleGeometry_.bind(this)}}addFeature(e,t){t=void 0===t||t;const s=(0,_.v6)(e),n=e.getGeometry();if(n){const t=this.GEOMETRY_SEGMENTERS_[n.getType()];if(t){this.indexedFeaturesExtents_[s]=n.getExtent((0,l.S5)());const i=[];if(t(i,n),1===i.length)this.rBush_.insert((0,l.Tr)(i[0]),{feature:e,segment:i[0]});else if(i.length>1){const t=i.map(e=>(0,l.Tr)(e)),s=i.map(t=>({feature:e,segment:t}));this.rBush_.load(t,s)}}}t&&(this.featureChangeListenerKeys_[s]=(0,g.KT)(e,i.A.CHANGE,this.handleFeatureChange_,this))}getFeatures_(){let e;return this.features_?e=this.features_:this.source_&&(e=this.source_.getFeatures()),e}handleEvent(e){const t=this.snapTo(e.pixel,e.coordinate,e.map);return t&&(e.coordinate=t.vertex.slice(0,2),e.pixel=t.vertexPixel),super.handleEvent(e)}handleFeatureAdd_(e){const t=f(e);t&&this.addFeature(t)}handleFeatureRemove_(e){const t=f(e);t&&this.removeFeature(t)}handleFeatureChange_(e){const t=e.target;if(this.handlingDownUpSequence){const e=(0,_.v6)(t);e in this.pendingFeatures_||(this.pendingFeatures_[e]=t)}else this.updateFeature_(t)}handleUpEvent(e){const t=Object.values(this.pendingFeatures_);return t.length&&(t.forEach(this.updateFeature_.bind(this)),this.pendingFeatures_={}),!1}removeFeature(e,t){const s=void 0===t||t,n=(0,_.v6)(e),i=this.indexedFeaturesExtents_[n];if(i){const t=this.rBush_,s=[];t.forEachInExtent(i,function(t){e===t.feature&&s.push(t)});for(let e=s.length-1;e>=0;--e)t.remove(s[e])}s&&((0,g.JH)(this.featureChangeListenerKeys_[n]),delete this.featureChangeListenerKeys_[n])}setMap(e){const t=this.getMap(),s=this.featuresListenerKeys_,i=this.getFeatures_();t&&(s.forEach(g.JH),s.length=0,this.rBush_.clear(),Object.values(this.featureChangeListenerKeys_).forEach(g.JH),this.featureChangeListenerKeys_={}),super.setMap(e),e&&(this.features_?s.push((0,g.KT)(this.features_,n.A.ADD,this.handleFeatureAdd_,this),(0,g.KT)(this.features_,n.A.REMOVE,this.handleFeatureRemove_,this)):this.source_&&s.push((0,g.KT)(this.source_,a.A.ADDFEATURE,this.handleFeatureAdd_,this),(0,g.KT)(this.source_,a.A.REMOVEFEATURE,this.handleFeatureRemove_,this)),i.forEach(e=>this.addFeature(e)))}snapTo(e,t,s){const n=s.getView().getProjection(),i=(0,d.Ad)(t,n),r=(0,d.JR)((0,l.r)((0,l.Tr)([i]),s.getView().getResolution()*this.pixelTolerance_),n),o=this.rBush_.getInExtent(r),a=o.length;if(0===a)return null;let h,c=1/0;const _=this.pixelTolerance_*this.pixelTolerance_,g=()=>{if(h){const t=s.getPixelFromCoordinate(h);if((0,u.hG)(e,t)<=_)return{vertex:h,vertexPixel:[Math.round(t[0]),Math.round(t[1])]}}return null};if(this.vertex_){for(let e=0;e<a;++e){const t=o[e];"Circle"!==t.feature.getGeometry().getType()&&t.segment.forEach(e=>{const t=(0,d.Ad)(e,n),s=(0,u.hG)(i,t);s<c&&(h=e,c=s)})}const e=g();if(e)return e}if(this.edge_){for(let e=0;e<a;++e){let t=null;const s=o[e];if("Circle"===s.feature.getGeometry().getType()){let e=s.feature.getGeometry();const r=(0,d.Tf)();r&&(e=e.clone().transform(r,n)),t=(0,u.hw)(i,e)}else{const[e,r]=s.segment;r&&(p[0]=(0,d.Ad)(e,n),p[1]=(0,d.Ad)(r,n),t=(0,u.sG)(i,p))}if(t){const e=(0,u.hG)(i,t);e<c&&(h=(0,d.te)(t,n),c=e)}}const e=g();if(e)return e}return null}updateFeature_(e){this.removeFeature(e,!1),this.addFeature(e,!1)}segmentCircleGeometry_(e,t){const s=this.getMap().getView().getProjection();let n=t;const i=(0,d.Tf)();i&&(n=n.clone().transform(i,s));const r=(0,c.nD)(n);i&&r.transform(s,i);const o=r.getCoordinates()[0];for(let t=0,s=o.length-1;t<s;++t)e.push(o.slice(t,t+2))}segmentGeometryCollectionGeometry_(e,t){const s=t.getGeometriesArray();for(let t=0;t<s.length;++t){const n=this.GEOMETRY_SEGMENTERS_[s[t].getType()];n&&n(e,s[t])}}segmentLineStringGeometry_(e,t){const s=t.getCoordinates();for(let t=0,n=s.length-1;t<n;++t)e.push(s.slice(t,t+2))}segmentMultiLineStringGeometry_(e,t){const s=t.getCoordinates();for(let t=0,n=s.length;t<n;++t){const n=s[t];for(let t=0,s=n.length-1;t<s;++t)e.push(n.slice(t,t+2))}}segmentMultiPointGeometry_(e,t){t.getCoordinates().forEach(t=>{e.push([t])})}segmentMultiPolygonGeometry_(e,t){const s=t.getCoordinates();for(let t=0,n=s.length;t<n;++t){const n=s[t];for(let t=0,s=n.length;t<s;++t){const s=n[t];for(let t=0,n=s.length-1;t<n;++t)e.push(s.slice(t,t+2))}}}segmentPointGeometry_(e,t){e.push([t.getCoordinates()])}segmentPolygonGeometry_(e,t){const s=t.getCoordinates();for(let t=0,n=s.length;t<n;++t){const n=s[t];for(let t=0,s=n.length-1;t<s;++t)e.push(n.slice(t,t+2))}}}const v=m},874458:(e,t,s)=>{"use strict";s.d(t,{A:()=>_});var n=s(650071),i=s(301685),r=s(786717),o=s(382187),a=s(821409),h=s(374238),l=s(958704),u=s(385733);class c extends i.Ay{constructor(e,t,s,n,i){super(e),this.features=t,this.coordinate=s,this.startCoordinate=n,this.mapBrowserEvent=i}}class d extends a.A{constructor(e){let t;if(super(e=e||{}),this.on,this.once,this.un,this.lastCoordinate_=null,this.startCoordinate_=null,this.features_=void 0!==e.features?e.features:null,e.layers&&!this.features_)if("function"==typeof e.layers)t=e.layers;else{const s=e.layers;t=function(e){return s.includes(e)}}else t=h.rT;this.layerFilter_=t,this.filter_=e.filter&&!this.features_?e.filter:h.rT,this.hitTolerance_=e.hitTolerance?e.hitTolerance:0,this.condition_=e.condition?e.condition:l.Gk,this.lastFeature_=null,this.addChangeListener(o.A.ACTIVE,this.handleActiveChanged_)}handleDownEvent(e){if(!e.originalEvent||!this.condition_(e))return!1;if(this.lastFeature_=this.featuresAtPixel_(e.pixel,e.map),!this.lastCoordinate_&&this.lastFeature_){this.startCoordinate_=e.coordinate,this.lastCoordinate_=e.coordinate,this.handleMoveEvent(e);const t=this.features_||new n.A([this.lastFeature_]);return this.dispatchEvent(new c("translatestart",t,e.coordinate,this.startCoordinate_,e)),!0}return!1}handleUpEvent(e){if(this.lastCoordinate_){this.lastCoordinate_=null,this.handleMoveEvent(e);const t=this.features_||new n.A([this.lastFeature_]);return this.dispatchEvent(new c("translateend",t,e.coordinate,this.startCoordinate_,e)),this.startCoordinate_=null,!0}return!1}handleDragEvent(e){if(this.lastCoordinate_){const t=e.coordinate,s=e.map.getView().getProjection(),i=(0,u.Ad)(t,s),r=(0,u.Ad)(this.lastCoordinate_,s),o=i[0]-r[0],a=i[1]-r[1],h=this.features_||new n.A([this.lastFeature_]),l=(0,u.Tf)();h.forEach(function(e){const t=e.getGeometry();l?(t.transform(l,s),t.translate(o,a),t.transform(s,l)):t.translate(o,a),e.setGeometry(t)}),this.lastCoordinate_=t,this.dispatchEvent(new c("translating",h,t,this.startCoordinate_,e))}}handleMoveEvent(e){const t=e.map.getViewport();this.featuresAtPixel_(e.pixel,e.map)?(t.classList.remove(this.lastCoordinate_?"ol-grab":"ol-grabbing"),t.classList.add(this.lastCoordinate_?"ol-grabbing":"ol-grab")):t.classList.remove("ol-grab","ol-grabbing")}featuresAtPixel_(e,t){return t.forEachFeatureAtPixel(e,(e,t)=>{if(e instanceof r.A&&this.filter_(e,t)&&(!this.features_||this.features_.getArray().includes(e)))return e},{layerFilter:this.layerFilter_,hitTolerance:this.hitTolerance_})}getHitTolerance(){return this.hitTolerance_}setHitTolerance(e){this.hitTolerance_=e}setMap(e){const t=this.getMap();super.setMap(e),this.updateState_(t)}handleActiveChanged_(){this.updateState_(null)}updateState_(e){let t=this.getMap();const s=this.getActive();t&&s||(t=t||e,!t)||t.getViewport().classList.remove("ol-grab","ol-grabbing")}}const _=d}}]);