"use strict";(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[9589],{323111:(t,e,s)=>{s.d(e,{A:()=>h});var n=s(893279),i=s(145046);function r(t,e,s){if(void 0===s&&(s={}),!0===s.final)return function(t,e){var s=r(e,t);return(s+180)%360}(t,e);var o=(0,i.uG)(t),a=(0,i.uG)(e),h=(0,n.tR)(o[0]),d=(0,n.tR)(a[0]),c=(0,n.tR)(o[1]),u=(0,n.tR)(a[1]),l=Math.sin(d-h)*Math.cos(u),f=Math.cos(c)*Math.sin(u)-Math.sin(c)*Math.cos(u)*Math.cos(d-h);return(0,n.nv)(Math.atan2(l,f))}function o(t,e,s,r){void 0===r&&(r={});var o=(0,i.uG)(t),a=(0,n.tR)(o[0]),h=(0,n.tR)(o[1]),d=(0,n.tR)(s),c=(0,n.Gf)(e,r.units),u=Math.asin(Math.sin(h)*Math.cos(c)+Math.cos(h)*Math.sin(c)*Math.cos(d)),l=a+Math.atan2(Math.sin(d)*Math.sin(c)*Math.cos(h),Math.cos(c)-Math.sin(h)*Math.sin(u)),f=(0,n.nv)(l),v=(0,n.nv)(u);return(0,n.zx)([f,v],r.properties)}var a=s(230669);function h(t,e,s){void 0===s&&(s={});for(var h=(0,i.bg)(t).coordinates,d=0,c=0;c<h.length&&!(e>=d&&c===h.length-1);c++){if(d>=e){var u=e-d;if(u){var l=r(h[c],h[c-1])-180;return o(h[c],u,l,s)}return(0,n.zx)(h[c])}d+=(0,a.A)(h[c],h[c+1],s)}return(0,n.zx)(h[h.length-1])}},230669:(t,e,s)=>{s.d(e,{A:()=>r});var n=s(145046),i=s(893279);const r=function(t,e,s){void 0===s&&(s={});var r=(0,n.uG)(t),o=(0,n.uG)(e),a=(0,i.tR)(o[1]-r[1]),h=(0,i.tR)(o[0]-r[0]),d=(0,i.tR)(r[1]),c=(0,i.tR)(o[1]),u=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(h/2),2)*Math.cos(d)*Math.cos(c);return(0,i.cJ)(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)),s.units)}},150802:(t,e,s)=>{s.d(e,{A:()=>r});var n=s(230669),i=s(629987);function r(t,e){return void 0===e&&(e={}),(0,i.OQ)(t,function(t,s){var i=s.geometry.coordinates;return t+(0,n.A)(i[0],i[1],e)},0)}},694974:(t,e,s)=>{s.d(e,{A:()=>h});var n=s(562096),i=s(570915),r=s(892497),o=s(787622);class a extends n.Ay{constructor(t,e,s){super(),void 0!==s&&void 0===e?this.setFlatCoordinates(s,t):(e=e||0,this.setCenterAndRadius(t,e,s))}clone(){const t=new a(this.flatCoordinates.slice(),void 0,this.layout);return t.applyProperties(this),t}closestPointXY(t,e,s,n){const i=this.flatCoordinates,r=t-i[0],o=e-i[1],a=r*r+o*o;if(a<n){if(0===a)for(let t=0;t<this.stride;++t)s[t]=i[t];else{const t=this.getRadius()/Math.sqrt(a);s[0]=i[0]+t*r,s[1]=i[1]+t*o;for(let t=2;t<this.stride;++t)s[t]=i[t]}return s.length=this.stride,a}return n}containsXY(t,e){const s=this.flatCoordinates,n=t-s[0],i=e-s[1];return n*n+i*i<=this.getRadiusSquared_()}getCenter(){return this.flatCoordinates.slice(0,this.stride)}computeExtent(t){const e=this.flatCoordinates,s=e[this.stride]-e[0];return(0,i.N)(e[0]-s,e[1]-s,e[0]+s,e[1]+s,t)}getRadius(){return Math.sqrt(this.getRadiusSquared_())}getRadiusSquared_(){const t=this.flatCoordinates[this.stride]-this.flatCoordinates[0],e=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return t*t+e*e}getType(){return"Circle"}intersectsExtent(t){const e=this.getExtent();if((0,i.HY)(t,e)){const e=this.getCenter();return t[0]<=e[0]&&t[2]>=e[0]||t[1]<=e[1]&&t[3]>=e[1]||(0,i.sB)(t,this.intersectsCoordinate.bind(this))}return!1}setCenter(t){const e=this.stride,s=this.flatCoordinates[e]-this.flatCoordinates[0],n=t.slice();n[e]=n[0]+s;for(let s=1;s<e;++s)n[e+s]=t[s];this.setFlatCoordinates(this.layout,n),this.changed()}setCenterAndRadius(t,e,s){this.setLayout(s,t,0),this.flatCoordinates||(this.flatCoordinates=[]);const n=this.flatCoordinates;let i=(0,r._n)(n,0,t,this.stride);n[i++]=n[0]+e;for(let t=1,e=this.stride;t<e;++t)n[i++]=n[t];n.length=i,this.changed()}getCoordinates(){return null}setCoordinates(t,e){}setRadius(t){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+t,this.changed()}rotate(t,e){const s=this.getCenter(),n=this.getStride();this.setCenter((0,o.e$)(s,0,s.length,n,t,e,s)),this.changed()}}a.prototype.transform;const h=a},887331:(t,e,s)=>{s.d(e,{J7:()=>h,r2:()=>d});var n=s(702236),i=s(7771),r=s(609703),o=s(573608),a=s(385733);function h(t,e){const s=t.canvas,o=(e=e||{}).pixelRatio||i.cr,a=e.size;a&&(s.width=a[0]*o,s.height=a[1]*o,s.style.width=a[0]+"px",s.style.height=a[1]+"px");const h=[0,0,s.width,s.height],d=(0,r.hs)((0,r.vt)(),o,o);return new n.A(t,o,h,d,0)}function d(t){if(!(t.context instanceof CanvasRenderingContext2D))throw new Error("Only works for render events from Canvas 2D layers");const e=t.inversePixelTransform[0],s=t.inversePixelTransform[1],i=Math.sqrt(e*e+s*s),h=t.frameState,d=(0,r.lw)(t.inversePixelTransform.slice(),h.coordinateToPixelTransform),c=(0,o.j)(h.viewState.resolution,i);let u;const l=(0,a.Tf)();return l&&(u=(0,a.FO)(l,h.viewState.projection)),new n.A(t.context,i,h.extent,d,h.viewState.rotation,c,u)}}}]);