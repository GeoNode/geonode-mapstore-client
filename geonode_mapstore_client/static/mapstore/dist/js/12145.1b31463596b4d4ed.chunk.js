"use strict";(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[12145],{229132:(e,t,i)=>{i.d(t,{A:()=>b});var n=i(650071),s=i(332135),r=i(301685),o=i(506837),a=i(786717),h=i(873445),l=i(644294),d=i(821409),g=i(495902),u=i(88280),c=i(712651),_=i(754602),f=i(958704),m=i(570915),y=i(206933),p=i(429276),v=i(166514),x=i(934142),F=i(207434),S=i(104087);const A=[0,0,0,0],C=[],E="modifyend";class P extends r.Ay{constructor(e,t,i){super(e),this.features=t,this.mapBrowserEvent=i}}class T extends d.A{constructor(e){let t;if(super(e),this.on,this.once,this.un,this.boundHandleFeatureChange_=this.handleFeatureChange_.bind(this),this.condition_=e.condition?e.condition:f.fs,this.defaultDeleteCondition_=function(e){return(0,f.Js)(e)&&(0,f.t5)(e)},this.deleteCondition_=e.deleteCondition?e.deleteCondition:this.defaultDeleteCondition_,this.insertVertexCondition_=e.insertVertexCondition?e.insertVertexCondition:f.Gk,this.vertexFeature_=null,this.vertexSegments_=null,this.lastPixel_=[0,0],this.ignoreNextSingleClick_=!1,this.featuresBeingModified_=null,this.rBush_=new g.A,this.pixelTolerance_=void 0!==e.pixelTolerance?e.pixelTolerance:10,this.snappedToVertex_=!1,this.changingFeature_=!1,this.dragSegments_=[],this.overlay_=new c.A({source:new _.A({useSpatialIndex:!1,wrapX:!!e.wrapX}),style:e.style?e.style:G(),updateWhileAnimating:!0,updateWhileInteracting:!0}),this.SEGMENT_WRITERS_={Point:this.writePointGeometry_.bind(this),LineString:this.writeLineStringGeometry_.bind(this),LinearRing:this.writeLineStringGeometry_.bind(this),Polygon:this.writePolygonGeometry_.bind(this),MultiPoint:this.writeMultiPointGeometry_.bind(this),MultiLineString:this.writeMultiLineStringGeometry_.bind(this),MultiPolygon:this.writeMultiPolygonGeometry_.bind(this),Circle:this.writeCircleGeometry_.bind(this),GeometryCollection:this.writeGeometryCollectionGeometry_.bind(this)},this.source_=null,this.hitDetection_=null,e.features?t=e.features:e.source&&(this.source_=e.source,t=new n.A(this.source_.getFeatures()),this.source_.addEventListener(u.A.ADDFEATURE,this.handleSourceAdd_.bind(this)),this.source_.addEventListener(u.A.REMOVEFEATURE,this.handleSourceRemove_.bind(this))),!t)throw new Error("The modify interaction requires features, a source or a layer");e.hitDetection&&(this.hitDetection_=e.hitDetection),this.features_=t,this.features_.forEach(this.addFeature_.bind(this)),this.features_.addEventListener(s.A.ADD,this.handleFeatureAdd_.bind(this)),this.features_.addEventListener(s.A.REMOVE,this.handleFeatureRemove_.bind(this)),this.lastPointerEvent_=null,this.delta_=[0,0],this.snapToPointer_=void 0===e.snapToPointer?!this.hitDetection_:e.snapToPointer}addFeature_(e){const t=e.getGeometry();if(t){const i=this.SEGMENT_WRITERS_[t.getType()];i&&i(e,t)}const i=this.getMap();i&&i.isRendered()&&this.getActive()&&this.handlePointerAtPixel_(this.lastPixel_,i),e.addEventListener(o.A.CHANGE,this.boundHandleFeatureChange_)}willModifyFeatures_(e,t){if(!this.featuresBeingModified_){this.featuresBeingModified_=new n.A;const i=this.featuresBeingModified_.getArray();for(let e=0,n=t.length;e<n;++e){const n=t[e];for(let e=0,t=n.length;e<t;++e){const t=n[e].feature;t&&!i.includes(t)&&this.featuresBeingModified_.push(t)}}0===this.featuresBeingModified_.getLength()?this.featuresBeingModified_=null:this.dispatchEvent(new P("modifystart",this.featuresBeingModified_,e))}}removeFeature_(e){this.removeFeatureSegmentData_(e),this.vertexFeature_&&0===this.features_.getLength()&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),e.removeEventListener(o.A.CHANGE,this.boundHandleFeatureChange_)}removeFeatureSegmentData_(e){const t=this.rBush_,i=[];t.forEach(function(t){e===t.feature&&i.push(t)});for(let e=i.length-1;e>=0;--e){const n=i[e];for(let e=this.dragSegments_.length-1;e>=0;--e)this.dragSegments_[e][0]===n&&this.dragSegments_.splice(e,1);t.remove(n)}}setActive(e){this.vertexFeature_&&!e&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),super.setActive(e)}setMap(e){this.overlay_.setMap(e),super.setMap(e)}getOverlay(){return this.overlay_}handleSourceAdd_(e){e.feature&&this.features_.push(e.feature)}handleSourceRemove_(e){e.feature&&this.features_.remove(e.feature)}handleFeatureAdd_(e){this.addFeature_(e.element)}handleFeatureChange_(e){if(!this.changingFeature_){const t=e.target;this.removeFeature_(t),this.addFeature_(t)}}handleFeatureRemove_(e){this.removeFeature_(e.element)}writePointGeometry_(e,t){const i=t.getCoordinates(),n={feature:e,geometry:t,segment:[i,i]};this.rBush_.insert(t.getExtent(),n)}writeMultiPointGeometry_(e,t){const i=t.getCoordinates();for(let n=0,s=i.length;n<s;++n){const s=i[n],r={feature:e,geometry:t,depth:[n],index:n,segment:[s,s]};this.rBush_.insert(t.getExtent(),r)}}writeLineStringGeometry_(e,t){const i=t.getCoordinates();for(let n=0,s=i.length-1;n<s;++n){const s=i.slice(n,n+2),r={feature:e,geometry:t,index:n,segment:s};this.rBush_.insert((0,m.Tr)(s),r)}}writeMultiLineStringGeometry_(e,t){const i=t.getCoordinates();for(let n=0,s=i.length;n<s;++n){const s=i[n];for(let i=0,r=s.length-1;i<r;++i){const r=s.slice(i,i+2),o={feature:e,geometry:t,depth:[n],index:i,segment:r};this.rBush_.insert((0,m.Tr)(r),o)}}}writePolygonGeometry_(e,t){const i=t.getCoordinates();for(let n=0,s=i.length;n<s;++n){const s=i[n];for(let i=0,r=s.length-1;i<r;++i){const r=s.slice(i,i+2),o={feature:e,geometry:t,depth:[n],index:i,segment:r};this.rBush_.insert((0,m.Tr)(r),o)}}}writeMultiPolygonGeometry_(e,t){const i=t.getCoordinates();for(let n=0,s=i.length;n<s;++n){const s=i[n];for(let i=0,r=s.length;i<r;++i){const r=s[i];for(let s=0,o=r.length-1;s<o;++s){const o=r.slice(s,s+2),a={feature:e,geometry:t,depth:[i,n],index:s,segment:o};this.rBush_.insert((0,m.Tr)(o),a)}}}}writeCircleGeometry_(e,t){const i=t.getCenter(),n={feature:e,geometry:t,index:0,segment:[i,i]},s={feature:e,geometry:t,index:1,segment:[i,i]},r=[n,s];n.featureSegments=r,s.featureSegments=r,this.rBush_.insert((0,m.dP)(i),n);let o=t;const a=(0,F.Tf)();if(a&&this.getMap()){const e=this.getMap().getView().getProjection();o=o.clone().transform(a,e),o=(0,x.nD)(o).transform(e,a)}this.rBush_.insert(o.getExtent(),s)}writeGeometryCollectionGeometry_(e,t){const i=t.getGeometriesArray();for(let t=0;t<i.length;++t){const n=i[t];(0,this.SEGMENT_WRITERS_[n.getType()])(e,n)}}createOrUpdateVertexFeature_(e,t,i){let n=this.vertexFeature_;return n?n.getGeometry().setCoordinates(e):(n=new a.A(new l.A(e)),this.vertexFeature_=n,this.overlay_.getSource().addFeature(n)),n.set("features",t),n.set("geometries",i),n}handleEvent(e){if(!e.originalEvent)return!0;let t;return this.lastPointerEvent_=e,e.map.getView().getInteracting()||e.type!=h.A.POINTERMOVE||this.handlingDownUpSequence||this.handlePointerMove_(e),this.vertexFeature_&&this.deleteCondition_(e)&&(t=!(e.type!=h.A.SINGLECLICK||!this.ignoreNextSingleClick_)||this.removePoint()),e.type==h.A.SINGLECLICK&&(this.ignoreNextSingleClick_=!1),super.handleEvent(e)&&!t}handleDragEvent(e){this.ignoreNextSingleClick_=!1,this.willModifyFeatures_(e,this.dragSegments_);const t=[e.coordinate[0]+this.delta_[0],e.coordinate[1]+this.delta_[1]],i=[],n=[];for(let s=0,r=this.dragSegments_.length;s<r;++s){const r=this.dragSegments_[s],o=r[0],a=o.feature;i.includes(a)||i.push(a);const h=o.geometry;n.includes(h)||n.push(h);const l=o.depth;let d;const g=o.segment,u=r[1];for(;t.length<h.getStride();)t.push(g[u][t.length]);switch(h.getType()){case"Point":d=t,g[0]=t,g[1]=t;break;case"MultiPoint":d=h.getCoordinates(),d[o.index]=t,g[0]=t,g[1]=t;break;case"LineString":d=h.getCoordinates(),d[o.index+u]=t,g[u]=t;break;case"MultiLineString":case"Polygon":d=h.getCoordinates(),d[l[0]][o.index+u]=t,g[u]=t;break;case"MultiPolygon":d=h.getCoordinates(),d[l[1]][l[0]][o.index+u]=t,g[u]=t;break;case"Circle":if(g[0]=t,g[1]=t,0===o.index)this.changingFeature_=!0,h.setCenter(t),this.changingFeature_=!1;else{this.changingFeature_=!0;const i=e.map.getView().getProjection();let n=(0,y.Io)((0,F.Ad)(h.getCenter(),i),(0,F.Ad)(t,i));const s=(0,F.Tf)();if(s){const e=h.clone().transform(s,i);e.setRadius(n),n=e.transform(i,s).getRadius()}h.setRadius(n),this.changingFeature_=!1}}d&&this.setGeometryCoordinates_(h,d)}this.createOrUpdateVertexFeature_(t,i,n)}handleDownEvent(e){if(!this.condition_(e))return!1;const t=e.coordinate;this.handlePointerAtPixel_(e.pixel,e.map,t),this.dragSegments_.length=0,this.featuresBeingModified_=null;const i=this.vertexFeature_;if(i){const n=e.map.getView().getProjection(),s=[],r=i.getGeometry().getCoordinates(),o=(0,m.Tr)([r]),a=this.rBush_.getInExtent(o),h={};a.sort(M);for(let i=0,o=a.length;i<o;++i){const o=a[i],l=o.segment;let d=(0,S.v6)(o.geometry);const g=o.depth;if(g&&(d+="-"+g.join("-")),h[d]||(h[d]=new Array(2)),"Circle"!==o.geometry.getType()||1!==o.index)if(!(0,y.aI)(l[0],r)||h[d][0])if(!(0,y.aI)(l[1],r)||h[d][1])(0,S.v6)(l)in this.vertexSegments_&&!h[d][0]&&!h[d][1]&&this.insertVertexCondition_(e)&&s.push(o);else{if(h[d][0]&&0===h[d][0].index){let e=o.geometry.getCoordinates();switch(o.geometry.getType()){case"LineString":case"MultiLineString":continue;case"MultiPolygon":e=e[g[1]];case"Polygon":if(o.index!==e[g[0]].length-2)continue}}this.dragSegments_.push([o,1]),h[d][1]=o}else this.dragSegments_.push([o,0]),h[d][0]=o;else{const e=L(t,o,n);(0,y.aI)(e,r)&&!h[d][0]&&(this.dragSegments_.push([o,0]),h[d][0]=o)}}s.length&&this.willModifyFeatures_(e,[s]);for(let e=s.length-1;e>=0;--e)this.insertVertex_(s[e],r)}return!!this.vertexFeature_}handleUpEvent(e){for(let t=this.dragSegments_.length-1;t>=0;--t){const i=this.dragSegments_[t][0],n=i.geometry;if("Circle"===n.getType()){const t=n.getCenter(),s=i.featureSegments[0],r=i.featureSegments[1];s.segment[0]=t,s.segment[1]=t,r.segment[0]=t,r.segment[1]=t,this.rBush_.update((0,m.dP)(t),s);let o=n;const a=(0,F.Tf)();if(a){const t=e.map.getView().getProjection();o=o.clone().transform(a,t),o=(0,x.nD)(o).transform(t,a)}this.rBush_.update(o.getExtent(),r)}else this.rBush_.update((0,m.Tr)(i.segment),i)}return this.featuresBeingModified_&&(this.dispatchEvent(new P(E,this.featuresBeingModified_,e)),this.featuresBeingModified_=null),!1}handlePointerMove_(e){this.lastPixel_=e.pixel,this.handlePointerAtPixel_(e.pixel,e.map,e.coordinate)}handlePointerAtPixel_(e,t,i){const n=i||t.getCoordinateFromPixel(e),s=t.getView().getProjection(),r=function(e,t){return w(n,e,s)-w(n,t,s)};let o,h;if(this.hitDetection_){const i="object"==typeof this.hitDetection_?e=>e===this.hitDetection_:void 0;t.forEachFeatureAtPixel(e,(e,t,i)=>{i&&(i=new l.A((0,F.te)(i.getCoordinates(),s)));const n=i||e.getGeometry();if("Point"===n.getType()&&e instanceof a.A&&this.features_.getArray().includes(e)){h=n;const t=e.getGeometry().getFlatCoordinates().slice(0,2);o=[{feature:e,geometry:h,segment:[t,t]}]}return!0},{layerFilter:i})}if(!o){const e=(0,F.SD)((0,m.dP)(n,A),s),i=t.getView().getResolution()*this.pixelTolerance_,r=(0,F.JR)((0,m.r)(e,i,A),s);o=this.rBush_.getInExtent(r)}if(o&&o.length>0){const i=o.sort(r)[0],a=i.segment;let l=L(n,i,s);const d=t.getPixelFromCoordinate(l);let g=(0,y.Io)(e,d);if(h||g<=this.pixelTolerance_){const e={};if(e[(0,S.v6)(a)]=!0,this.snapToPointer_||(this.delta_[0]=l[0]-n[0],this.delta_[1]=l[1]-n[1]),"Circle"===i.geometry.getType()&&1===i.index)this.snappedToVertex_=!0,this.createOrUpdateVertexFeature_(l,[i.feature],[i.geometry]);else{const n=t.getPixelFromCoordinate(a[0]),s=t.getPixelFromCoordinate(a[1]),r=(0,y.hG)(d,n),h=(0,y.hG)(d,s);g=Math.sqrt(Math.min(r,h)),this.snappedToVertex_=g<=this.pixelTolerance_,this.snappedToVertex_&&(l=r>h?a[1]:a[0]),this.createOrUpdateVertexFeature_(l,[i.feature],[i.geometry]);const u={};u[(0,S.v6)(i.geometry)]=!0;for(let t=1,i=o.length;t<i;++t){const i=o[t].segment;if(!((0,y.aI)(a[0],i[0])&&(0,y.aI)(a[1],i[1])||(0,y.aI)(a[0],i[1])&&(0,y.aI)(a[1],i[0])))break;{const n=(0,S.v6)(o[t].geometry);n in u||(u[n]=!0,e[(0,S.v6)(i)]=!0)}}}return void(this.vertexSegments_=e)}}this.vertexFeature_&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null)}insertVertex_(e,t){const i=e.segment,n=e.feature,s=e.geometry,r=e.depth,o=e.index;let a;for(;t.length<s.getStride();)t.push(0);switch(s.getType()){case"MultiLineString":case"Polygon":a=s.getCoordinates(),a[r[0]].splice(o+1,0,t);break;case"MultiPolygon":a=s.getCoordinates(),a[r[1]][r[0]].splice(o+1,0,t);break;case"LineString":a=s.getCoordinates(),a.splice(o+1,0,t);break;default:return}this.setGeometryCoordinates_(s,a);const h=this.rBush_;h.remove(e),this.updateSegmentIndices_(s,o,r,1);const l={segment:[i[0],t],feature:n,geometry:s,depth:r,index:o};h.insert((0,m.Tr)(l.segment),l),this.dragSegments_.push([l,1]);const d={segment:[t,i[1]],feature:n,geometry:s,depth:r,index:o+1};h.insert((0,m.Tr)(d.segment),d),this.dragSegments_.push([d,0]),this.ignoreNextSingleClick_=!0}removePoint(){if(this.lastPointerEvent_&&this.lastPointerEvent_.type!=h.A.POINTERDRAG){const e=this.lastPointerEvent_;this.willModifyFeatures_(e,this.dragSegments_);const t=this.removeVertex_();return this.featuresBeingModified_&&this.dispatchEvent(new P(E,this.featuresBeingModified_,e)),this.featuresBeingModified_=null,t}return!1}removeVertex_(){const e=this.dragSegments_,t={};let i,n,s,r,o,a,h,l,d,g,u,c=!1;for(o=e.length-1;o>=0;--o)s=e[o],g=s[0],u=(0,S.v6)(g.feature),g.depth&&(u+="-"+g.depth.join("-")),u in t||(t[u]={}),0===s[1]?(t[u].right=g,t[u].index=g.index):1==s[1]&&(t[u].left=g,t[u].index=g.index+1);for(u in t){switch(d=t[u].right,h=t[u].left,a=t[u].index,l=a-1,g=void 0!==h?h:d,l<0&&(l=0),r=g.geometry,n=r.getCoordinates(),i=n,c=!1,r.getType()){case"MultiLineString":n[g.depth[0]].length>2&&(n[g.depth[0]].splice(a,1),c=!0);break;case"LineString":n.length>2&&(n.splice(a,1),c=!0);break;case"MultiPolygon":i=i[g.depth[1]];case"Polygon":i=i[g.depth[0]],i.length>4&&(a==i.length-1&&(a=0),i.splice(a,1),c=!0,0===a&&(i.pop(),i.push(i[0]),l=i.length-1))}if(c){this.setGeometryCoordinates_(r,n);const t=[];if(void 0!==h&&(this.rBush_.remove(h),t.push(h.segment[0])),void 0!==d&&(this.rBush_.remove(d),t.push(d.segment[1])),void 0!==h&&void 0!==d){const e={depth:g.depth,feature:g.feature,geometry:g.geometry,index:l,segment:t};this.rBush_.insert((0,m.Tr)(e.segment),e)}this.updateSegmentIndices_(r,a,g.depth,-1),this.vertexFeature_&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),e.length=0}}return c}setGeometryCoordinates_(e,t){this.changingFeature_=!0,e.setCoordinates(t),this.changingFeature_=!1}updateSegmentIndices_(e,t,i,n){this.rBush_.forEachInExtent(e.getExtent(),function(s){s.geometry===e&&(void 0===i||void 0===s.depth||(0,v.aI)(s.depth,i))&&s.index>t&&(s.index+=n)})}}function M(e,t){return e.index-t.index}function w(e,t,i){const n=t.geometry;if("Circle"===n.getType()){let s=n;if(1===t.index){const t=(0,F.Tf)();t&&(s=s.clone().transform(t,i));const n=(0,y.hG)(s.getCenter(),(0,F.Ad)(e,i)),r=Math.sqrt(n)-s.getRadius();return r*r}}const s=(0,F.Ad)(e,i);return C[0]=(0,F.Ad)(t.segment[0],i),C[1]=(0,F.Ad)(t.segment[1],i),(0,y.$x)(s,C)}function L(e,t,i){const n=t.geometry;if("Circle"===n.getType()&&1===t.index){let t=n;const s=(0,F.Tf)();return s&&(t=t.clone().transform(s,i)),(0,F.te)(t.getClosestPoint((0,F.Ad)(e,i)),i)}const s=(0,F.Ad)(e,i);return C[0]=(0,F.Ad)(t.segment[0],i),C[1]=(0,F.Ad)(t.segment[1],i),(0,F.te)((0,y.sG)(s,C),i)}function G(){const e=(0,p.mY)();return function(t,i){return e.Point}}const b=T},142770:(e,t,i)=>{i.d(t,{A:()=>p});var n=i(650071),s=i(332135),r=i(301685),o=i(786717),a=i(806292),h=i(712651),l=i(374238),d=i(643530),g=i(429276),u=i(166514),c=i(104087),_=i(958704);class f extends r.Ay{constructor(e,t,i,n){super(e),this.selected=t,this.deselected=i,this.mapBrowserEvent=n}}const m={};class y extends a.Ay{constructor(e){let t;if(super(),this.on,this.once,this.un,e=e||{},this.boundAddFeature_=this.addFeature_.bind(this),this.boundRemoveFeature_=this.removeFeature_.bind(this),this.condition_=e.condition?e.condition:_.t5,this.addCondition_=e.addCondition?e.addCondition:_.Zm,this.removeCondition_=e.removeCondition?e.removeCondition:_.Zm,this.toggleCondition_=e.toggleCondition?e.toggleCondition:_.Kg,this.multi_=!!e.multi&&e.multi,this.filter_=e.filter?e.filter:l.rT,this.hitTolerance_=e.hitTolerance?e.hitTolerance:0,this.style_=void 0!==e.style?e.style:function(){const e=(0,g.mY)();return(0,u.X$)(e.Polygon,e.LineString),(0,u.X$)(e.GeometryCollection,e.LineString),function(t){return t.getGeometry()?e[t.getGeometry().getType()]:null}}(),this.features_=e.features||new n.A,e.layers)if("function"==typeof e.layers)t=e.layers;else{const i=e.layers;t=function(e){return i.includes(e)}}else t=l.rT;this.layerFilter_=t,this.featureLayerAssociation_={}}addFeatureLayerAssociation_(e,t){this.featureLayerAssociation_[(0,c.v6)(e)]=t}getFeatures(){return this.features_}getHitTolerance(){return this.hitTolerance_}getLayer(e){return this.featureLayerAssociation_[(0,c.v6)(e)]}setHitTolerance(e){this.hitTolerance_=e}setMap(e){this.getMap()&&this.style_&&this.features_.forEach(this.restorePreviousStyle_.bind(this)),super.setMap(e),e?(this.features_.addEventListener(s.A.ADD,this.boundAddFeature_),this.features_.addEventListener(s.A.REMOVE,this.boundRemoveFeature_),this.style_&&this.features_.forEach(this.applySelectedStyle_.bind(this))):(this.features_.removeEventListener(s.A.ADD,this.boundAddFeature_),this.features_.removeEventListener(s.A.REMOVE,this.boundRemoveFeature_))}addFeature_(e){const t=e.element;if(this.style_&&this.applySelectedStyle_(t),!this.getLayer(t)){const e=this.getMap().getAllLayers().find(function(e){if(e instanceof h.A&&e.getSource()&&e.getSource().hasFeature(t))return e});e&&this.addFeatureLayerAssociation_(t,e)}}removeFeature_(e){this.style_&&this.restorePreviousStyle_(e.element)}getStyle(){return this.style_}applySelectedStyle_(e){const t=(0,c.v6)(e);t in m||(m[t]=e.getStyle()),e.setStyle(this.style_)}restorePreviousStyle_(e){const t=this.getMap().getInteractions().getArray();for(let i=t.length-1;i>=0;--i){const n=t[i];if(n!==this&&n instanceof y&&n.getStyle()&&-1!==n.getFeatures().getArray().lastIndexOf(e))return void e.setStyle(n.getStyle())}const i=(0,c.v6)(e);e.setStyle(m[i]),delete m[i]}removeFeatureLayerAssociation_(e){delete this.featureLayerAssociation_[(0,c.v6)(e)]}handleEvent(e){if(!this.condition_(e))return!0;const t=this.addCondition_(e),i=this.removeCondition_(e),n=this.toggleCondition_(e),s=!t&&!i&&!n,r=e.map,a=this.getFeatures(),h=[],l=[];if(s){(0,d.I)(this.featureLayerAssociation_),r.forEachFeatureAtPixel(e.pixel,(e,t)=>{if(e instanceof o.A&&this.filter_(e,t))return this.addFeatureLayerAssociation_(e,t),l.push(e),!this.multi_},{layerFilter:this.layerFilter_,hitTolerance:this.hitTolerance_});for(let e=a.getLength()-1;e>=0;--e){const t=a.item(e),i=l.indexOf(t);i>-1?l.splice(i,1):(a.remove(t),h.push(t))}0!==l.length&&a.extend(l)}else{r.forEachFeatureAtPixel(e.pixel,(e,s)=>{if(e instanceof o.A&&this.filter_(e,s))return!t&&!n||a.getArray().includes(e)?(i||n)&&a.getArray().includes(e)&&(h.push(e),this.removeFeatureLayerAssociation_(e)):(this.addFeatureLayerAssociation_(e,s),l.push(e)),!this.multi_},{layerFilter:this.layerFilter_,hitTolerance:this.hitTolerance_});for(let e=h.length-1;e>=0;--e)a.remove(h[e]);a.extend(l)}return(l.length>0||h.length>0)&&this.dispatchEvent(new f("select",l,h,e)),!0}}const p=y}}]);