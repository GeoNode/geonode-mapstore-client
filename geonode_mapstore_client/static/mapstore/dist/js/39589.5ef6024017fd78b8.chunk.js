"use strict";(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[39589],{323111:(t,e,r)=>{r.d(e,{A:()=>h});var s=r(893279),n=r(145046);function i(t,e,r){if(void 0===r&&(r={}),!0===r.final)return function(t,e){var r=i(e,t);return(r+180)%360}(t,e);var o=(0,n.uG)(t),a=(0,n.uG)(e),h=(0,s.tR)(o[0]),d=(0,s.tR)(a[0]),u=(0,s.tR)(o[1]),c=(0,s.tR)(a[1]),l=Math.sin(d-h)*Math.cos(c),f=Math.cos(u)*Math.sin(c)-Math.sin(u)*Math.cos(c)*Math.cos(d-h);return(0,s.nv)(Math.atan2(l,f))}function o(t,e,r,i){void 0===i&&(i={});var o=(0,n.uG)(t),a=(0,s.tR)(o[0]),h=(0,s.tR)(o[1]),d=(0,s.tR)(r),u=(0,s.Gf)(e,i.units),c=Math.asin(Math.sin(h)*Math.cos(u)+Math.cos(h)*Math.sin(u)*Math.cos(d)),l=a+Math.atan2(Math.sin(d)*Math.sin(u)*Math.cos(h),Math.cos(u)-Math.sin(h)*Math.sin(c)),f=(0,s.nv)(l),g=(0,s.nv)(c);return(0,s.zx)([f,g],i.properties)}var a=r(230669);function h(t,e,r){void 0===r&&(r={});for(var h=(0,n.bg)(t).coordinates,d=0,u=0;u<h.length&&!(e>=d&&u===h.length-1);u++){if(d>=e){var c=e-d;if(c){var l=i(h[u],h[u-1])-180;return o(h[u],c,l,r)}return(0,s.zx)(h[u])}d+=(0,a.A)(h[u],h[u+1],r)}return(0,s.zx)(h[h.length-1])}},230669:(t,e,r)=>{r.d(e,{A:()=>i});var s=r(145046),n=r(893279);const i=function(t,e,r){void 0===r&&(r={});var i=(0,s.uG)(t),o=(0,s.uG)(e),a=(0,n.tR)(o[1]-i[1]),h=(0,n.tR)(o[0]-i[0]),d=(0,n.tR)(i[1]),u=(0,n.tR)(o[1]),c=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(h/2),2)*Math.cos(d)*Math.cos(u);return(0,n.cJ)(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),r.units)}},145046:(t,e,r)=>{function s(t){if(!t)throw new Error("coord is required");if(!Array.isArray(t)){if("Feature"===t.type&&null!==t.geometry&&"Point"===t.geometry.type)return t.geometry.coordinates;if("Point"===t.type)return t.coordinates}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return t;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function n(t){if(Array.isArray(t))return t;if("Feature"===t.type){if(null!==t.geometry)return t.geometry.coordinates}else if(t.coordinates)return t.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function i(t){return"Feature"===t.type?t.geometry:t}r.d(e,{$R:()=>n,bg:()=>i,uG:()=>s}),r(893279)},150802:(t,e,r)=>{r.d(e,{A:()=>i});var s=r(230669),n=r(629987);function i(t,e){return void 0===e&&(e={}),(0,n.OQ)(t,(function(t,r){var n=r.geometry.coordinates;return t+(0,s.A)(n[0],n[1],e)}),0)}},694974:(t,e,r)=>{r.d(e,{A:()=>h});var s=r(562096),n=r(570915),i=r(892497),o=r(787622);class a extends s.Ay{constructor(t,e,r){super(),void 0!==r&&void 0===e?this.setFlatCoordinates(r,t):(e=e||0,this.setCenterAndRadius(t,e,r))}clone(){const t=new a(this.flatCoordinates.slice(),void 0,this.layout);return t.applyProperties(this),t}closestPointXY(t,e,r,s){const n=this.flatCoordinates,i=t-n[0],o=e-n[1],a=i*i+o*o;if(a<s){if(0===a)for(let t=0;t<this.stride;++t)r[t]=n[t];else{const t=this.getRadius()/Math.sqrt(a);r[0]=n[0]+t*i,r[1]=n[1]+t*o;for(let t=2;t<this.stride;++t)r[t]=n[t]}return r.length=this.stride,a}return s}containsXY(t,e){const r=this.flatCoordinates,s=t-r[0],n=e-r[1];return s*s+n*n<=this.getRadiusSquared_()}getCenter(){return this.flatCoordinates.slice(0,this.stride)}computeExtent(t){const e=this.flatCoordinates,r=e[this.stride]-e[0];return(0,n.N)(e[0]-r,e[1]-r,e[0]+r,e[1]+r,t)}getRadius(){return Math.sqrt(this.getRadiusSquared_())}getRadiusSquared_(){const t=this.flatCoordinates[this.stride]-this.flatCoordinates[0],e=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return t*t+e*e}getType(){return"Circle"}intersectsExtent(t){const e=this.getExtent();if((0,n.HY)(t,e)){const e=this.getCenter();return t[0]<=e[0]&&t[2]>=e[0]||t[1]<=e[1]&&t[3]>=e[1]||(0,n.sB)(t,this.intersectsCoordinate.bind(this))}return!1}setCenter(t){const e=this.stride,r=this.flatCoordinates[e]-this.flatCoordinates[0],s=t.slice();s[e]=s[0]+r;for(let r=1;r<e;++r)s[e+r]=t[r];this.setFlatCoordinates(this.layout,s),this.changed()}setCenterAndRadius(t,e,r){this.setLayout(r,t,0),this.flatCoordinates||(this.flatCoordinates=[]);const s=this.flatCoordinates;let n=(0,i._n)(s,0,t,this.stride);s[n++]=s[0]+e;for(let t=1,e=this.stride;t<e;++t)s[n++]=s[t];s.length=n,this.changed()}getCoordinates(){return null}setCoordinates(t,e){}setRadius(t){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+t,this.changed()}rotate(t,e){const r=this.getCenter(),s=this.getStride();this.setCenter((0,o.e$)(r,0,r.length,s,t,e,r)),this.changed()}}a.prototype.transform;const h=a},887331:(t,e,r)=>{r.d(e,{J7:()=>h,r2:()=>d});var s=r(702236),n=r(7771),i=r(609703),o=r(573608),a=r(207434);function h(t,e){const r=t.canvas,o=(e=e||{}).pixelRatio||n.cr,a=e.size;a&&(r.width=a[0]*o,r.height=a[1]*o,r.style.width=a[0]+"px",r.style.height=a[1]+"px");const h=[0,0,r.width,r.height],d=(0,i.hs)((0,i.vt)(),o,o);return new s.A(t,o,h,d,0)}function d(t){if(!(t.context instanceof CanvasRenderingContext2D))throw new Error("Only works for render events from Canvas 2D layers");const e=t.inversePixelTransform[0],r=t.inversePixelTransform[1],n=Math.sqrt(e*e+r*r),h=t.frameState,d=(0,i.lw)(t.inversePixelTransform.slice(),h.coordinateToPixelTransform),u=(0,o.j)(h.viewState.resolution,n);let c;const l=(0,a.Tf)();return l&&(c=(0,a.FO)(l,h.viewState.projection)),new s.A(t.context,n,h.extent,d,h.viewState.rotation,u,c)}}}]);